#!/usr/bin/env node

var packager = require('electron-packager')
var package = require('../package.json')
var os = require('os')
var _ = require('lodash')
var path = require('path')
var shell = require('shelljs/global')

var platform = os.platform()
var arch = os.arch()
if (process.argv.indexOf('--all') !== -1) {
  arch = platform = 'all'
}

var devDeps = exec('npm list --dev --parseable', {silent:true}).output.split('\n')
var prodDeps = exec('npm list --production --parseable', {silent:true}).output.split('\n')
devDeps = _.difference(devDeps, prodDeps)

var current = path.join(__dirname, '..', 'node_modules')
devDeps = _.map(devDeps, function(p) {
  return path.join('node_modules', path.relative(current, p).split('/')[0])
})
devDeps = _.uniq(devDeps)

var opts = {
  dir: '.',
  name: 'Hacker Menu',
  overwrite: true,
  icon: 'images/Icon@1024.icns',
  platform: platform,
  arch: arch,
  out: 'build',
  version: package.config.electron_version,
  ignore: _.union(devDeps, [
    'src',
    'script',
    'build',
    'release',
    'images/(Icon@1024.icns|screenshot.png)'
  ])
}
if (!process.env.CI && process.argv.indexOf('--sign') !== -1) {
  opts.sign = 'Developer ID Application: Jingwen Ou'
}
packager(opts, function done (err, appPaths) {
  if (err) {
    if (err.message) {
      console.error(err.message)
    } else {
      console.error(err, err.stack)
    }

    process.exit(1)
  }

  if (appPaths.length > 1) {
    console.error('Wrote new apps to:\n' + appPaths.join('\n'))
  } else if (appPaths.length === 1) {
    console.error('Wrote new app to', appPaths[0])
  }
})
